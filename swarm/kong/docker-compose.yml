version: "3.3"


services:
  kong-database:
    image: postgres:9.6-alpine
    volumes:
      - kong_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${KONG_PG_PASSWORD:-kong}
      POSTGRES_USER: ${KONG_PG_USER:-kong}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kong}
    networks:
      - kong
    healthcheck:
      test: "pg_isready -U ${KONG_PG_USER:-kong} && psql -d ${KONG_PG_DATABASE:-kong} -U ${KONG_PG_USER:-kong} -c \"SELECT 1=1\""
      interval: 30s
      timeout: 30s
      retries: 5
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s

  # kong-database:
  #   image: cassandra:3.11
  #   volumes:
  #     - kong_data:/var/lib/cassandra
  #   networks:
  #     - kong
  #   healthcheck:
  #     test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5

  kong-migration:
    image: kong:1.2.1-alpine
    depends_on:
      - kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: kong-database
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      #- KONG_DATABASE=cassandra
      #- KONG_CASSANDRA_CONTACT_POINTS=kong-database
    command: kong migrations bootstrap
    networks:
      - kong
    deploy:
      restart_policy:
        condition: on-failure
        delay: 2s

  kong:
    image: kong:1.2.1-alpine
    depends_on:
      - kong-database
      - kong-migration
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: '0.0.0.0:8001'
      #KONG_DATABASE=cassandra
      #KONG_CASSANDRA_CONTACT_POINTS: kong-database
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: kong-database
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
    networks:
      - functions
      - kong
    ports:
      - 8000:8000
      - 8001:8001
      - 8443:8443
    healthcheck:
      test: "kong health"
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s

  konga-database:
    image: mongo:4.0
    volumes:
      - konga_data:/data/db
    networks:
      - kong
    healthcheck:
      test: echo 'db.stats().ok' | mongo localhost:27017/konga --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  konga:
    image: pantsel/konga:latest
    depends_on:
      - konga-database
    configs:
      - source: konga_user_seed
        target: /app/konga_user_seed
    networks:
      - kong
    ports:
      - 1337:1337
    environment:
      KONGA_SEED_USER_DATA_SOURCE_FILE: /app/konga_user_seed
      DB_ADAPTER: mongo
      DB_DATABASE: konga
      DB_HOST: konga-database
      NODE_ENV: production


configs:
  konga_user_seed:
    file: konga_user_seed


networks:
  kong:
    driver: overlay
    attachable: true

  functions:
    driver: overlay
    attachable: true


volumes:
  kong_data:
  konga_data:
